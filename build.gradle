/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */
 
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.20' apply false
	id 'java-library'
}

allprojects {
    apply plugin: 'eclipse'
	group='io.github.zebalu.advent2020'
}
 
subprojects {
	
	apply plugin: 'org.jetbrains.kotlin.jvm'
	apply plugin: 'java-library'
    
    repositories {
        // Use JCenter for resolving dependencies.
        jcenter()
    }
    
    dependencies {
        // Align versions of all Kotlin components
        implementation platform('org.jetbrains.kotlin:kotlin-bom')
    
        // Use the Kotlin JDK 8 standard library.
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
		
        if ( project.name != 'util' ) {
            implementation project(':util')
            testImplementation project(':util')
        }
    
        // Use the Kotlin test library.
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
    
        // Use the Kotlin JUnit integration.
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    }
	
	sourceCompatibility='1.8'
    
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

sourceCompatibility='1.8'

dependencies {
    file('./').listFiles().findAll { it.name.startsWith('day') }.each {
	    implementation project(":${it.name}")
	}
	
	implementation project(':util')
}

tasks.create('initDay') {
    doLast {
	    if ( !project.hasProperty('dayNumber') ) {
	        throw new GradleException('Please specify daynumber as: -PdayNumber=01')
	    }
	    int dayNum = Integer.parseInt(project.dayNumber)
	    if ( dayNum < 1 || dayNum > 25 ) {
	        throw new GradleException ('dayNumber must be between 0 and 25')
	    }
	    File day = file("day_${String.format('%02d', dayNum)}")
	    if ( day.exists() ) {
	    	throw new GradleException("day: ${day.name} already exists")
	    }
		createDir(day)
		def configs = ['main', 'test']
		def types = ['kotlin', 'resources']
		configs.each { c -> 
		    types.each { t -> 
		        createDir(new File(day, "src/${c}/${t}/io/github/zebalu/advent2020"))
		    }
		}
	}
	group 'util'
}

def createDir(File dir) {
    if ( ! dir.mkdirs() ) {
	    throw new GradleException ("Could not create directory: ${dir.absolutePath}")
	}
}
